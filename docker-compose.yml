version: "3.3"  # Version de Docker Compose

services:
  discovery:
    build: C:\Users\ASUS\OneDrive\Desktop\Micro_service\eurekaserver # Chemin vers le Dockerfile du serveur Eureka
    ports:
      - "8761:8761"  # Port exposé pour Eureka
    image: "eureka"  # Image nommée pour le service Eureka
    networks:
      - micro_service_network


  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: najibagragba
      MONGO_INITDB_ROOT_PASSWORD: najiba123
    volumes:
      - mongo-data:/data/db  # Persistance des données MongoDB
    networks:
      - micro_service_network
  Gateway:
    build: C:\Users\ASUS\OneDrive\Desktop\Micro_service\Gateway  # Chemin vers le Dockerfile du serveur Eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/MicroProject

    ports:
      - "8083:8083"  # Port exposé pour Eureka
    image: "gateway"  # Image nommée pour le service Eureka
    depends_on:
      - discovery  # Assure que le service Eureka est démarré avant
      - keycloak
    networks:
      - micro_service_network

  gestionUser:
    build: C:\Users\ASUS\OneDrive\Desktop\Micro_service\GestionUser(node)
    #entrypoint: ["./wait-for-eureka.sh", "node", "server.js"]  # Assurez-vous que le script est accessible et exécutable
    environment:
      - EUREKA_SERVER_URL=http://discovery:8761/eureka/

      - MONGODB_URI=mongodb://najibagragba:najiba123@mongo:27017/UserDataBase?authSource=admin
      - KEYCLOAK_URL=http://keycloak:8180/auth
      - KEYCLOAK_REALM=MicroProject
      - KEYCLOAK_CLIENT_ID=gestionUser
      - KEYCLOAK_CLIENT_SECRET=3chUvMA7cxOcKcLwEK7QrATbLfkVgMc2

    ports:
      - "4000:4000"
    depends_on:
      - discovery
      - mongo
      - keycloak
    image: "user-service"
    networks:
      - micro_service_network
  

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    environment:
      KEYCLOAK_ADMIN: admin  # Admin username
      KEYCLOAK_ADMIN_PASSWORD: admin  # Admin password
      DB_VENDOR: h2
      DB_ADDR: localhost
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      KEYCLOAK_FRONTEND_URL: http://keycloak:8180
    command: ["start-dev", "--db-url-properties", ";AUTO_SERVER=FALSE", "--http-port", "8180"]
    ports:
      - "8180:8180"  # Map external port 8180 to internal port 8180
    networks:
      - micro_service_network

  event:
    build: C:\Users\ASUS\OneDrive\Desktop\Micro_service\Event  # Path to your Event service Dockerfile
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.datasource.url=jdbc:postgresql://postgres:5432/CorzeloEvents  # PostgreSQL connection string
      - spring.datasource.username=postgres
      - spring.datasource.password=newpassword
      - spring.jpa.hibernate.ddl-auto=update
      - keycloak.auth-server-url=http://keycloak:8180/auth
      - keycloak.realm=MicroProject
      - keycloak.resource=Event
      - keycloak.public-client=true
      - keycloak.credentials.secret=eventServiceSecret
      - spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/MicroProject
      - spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8180/realms/MicroProject/protocol/openid-connect/certs
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8088:8088"  # Port for the Event service
    depends_on:
      - discovery
      - postgres
    
    networks:
      - micro_service_network


  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: newpassword
      POSTGRES_DB: CorzeloEvents  # Database name for Event service
    ports:
      - "5432:5432"
    networks:
      - micro_service_network


networks:
  micro_service_network:
    driver: bridge

volumes:
  mongo-data:  # Volume pour persister les données de MongoDB